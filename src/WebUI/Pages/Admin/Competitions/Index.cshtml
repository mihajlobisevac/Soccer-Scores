@page
@model SoccerScores.WebUI.Pages.Admin.Competitions.IndexModel
@{
}

<div id="app">
    <div class="basic-message">Competitions Panel</div>
    <a href="competitions/create" class="btn-confirm" style="font-size:0.9rem">
        Create New
    </a>

    <template v-if="loading === false" v-for="(country, index) in countries">
        <div class="matches-container" style="margin:2em 0 0 0">
            <div class="matches-comp">
                <div class="matches-comp-flag">
                    <img v-bind:src="country.flag" alt="flag" />
                </div>
                <div class="matches-comp-name">{{country.name}}</div>
            </div>
        </div>
        <div v-for="(competition, index) in country.competitions" class="matches-container" style="margin-bottom:0">
            <div class="matches-comp" style="margin-top:0">
                <a v-bind:href="'competitions/edit/' + competition.id" class="btn-edit btn-small" style="margin-left:1em">
                    Edit
                </a>
                <a class="btn-disabled btn-small" style="margin-left:0.5em">
                    Delete
                </a>
                <div style="margin-left:1em">{{competition.name}}</div>
            </div>
        </div>
    </template>
</div>

@section Scripts {
    <script>
        var app = new Vue({
            el: '#app',
            data: {
                loading: false,
                countries: []
            },
            mounted() {
                this.getCountries()
            },
            methods: {
                getCountries() {
                    this.loading = true;
                    axios.get('/api/competitions/all')
                        .then(res => {
                            this.countries = res.data
                        })
                        .catch(err => {
                            console.log(err)
                        })
                        .then(() => {
                            this.loading = false
                        })
                }
            },
            computed: {
            }
        })
    </script>
}
