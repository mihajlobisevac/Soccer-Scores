@page "{id}"
@model SoccerScores.WebUI.Pages.Admin.Matches.EditModel
@{
}

<div id="app">
    <div v-if="loading === true">
        Loading...
    </div>
    <div v-else class="input-form">
        <template v-if="match !== null">
            <h5>Edit Match {{match.id}}</h5>
            <div class="input-section">
                <div class="input-title">Kick Off</div>
                <input v-model="match.kickOff" />
                <div class="input-title">Game Week</div>
                <input v-model="match.gameWeek" />
            </div>
            <div class="confirm-discard">
                <button v-on:click="updateMatch()" class="btn-confirm">Confirm</button>
                <button v-on:click="discardMatch()" class="btn-discard">Discard</button>
            </div>
            <h5>Match {{match.id}} Incidents</h5>
            <div v-for="(incident, index) in match.incidents" class="input-section">
                <div class="input-title">Home Score</div>
                <input type="number" v-model="incident.homeScore" />
                <div class="input-title">Away Score</div>
                <input type="number" v-model="incident.awayScore" />
                <div class="input-title">Minute</div>
                <input type="number" v-model="incident.minute" />

                <div class="input-title">Type</div>
                <select v-model="incident.type">
                    <option disabled>Please select one</option>
                    <option v-for="(incidentType, index) in rel.types" v-bind:value="incidentType">
                        {{incidentType}}
                    </option>
                </select>

                <div class="input-title">Class</div>
                <select v-model="incident.class">
                    <option disabled>Please select one</option>
                    <option v-for="(incidentClass, index) in rel.classes" v-bind:value="incidentClass">
                        {{incidentClass}}
                    </option>
                </select>

                <div class="input-title">Primary Player</div>
                <select v-model="incident.primaryPlayer">
                    <option disabled>Please select one</option>
                    <option v-bind:value="null">None</option>
                    <option v-for="(player, index) in match.players" v-bind:value="player">
                        {{player.player.firstName}} {{player.player.lastName}}
                    </option>
                </select>

                <div class="input-title">Secondary Player</div>
                <select v-model="incident.secondaryPlayer">
                    <option disabled>Please select one</option>
                    <option v-bind:value="null">None</option>
                    <option v-for="(player, index) in match.players" v-bind:value="player">
                        {{player.player.firstName}} {{player.player.lastName}}
                    </option>
                </select>

                <label for="isHomeCheckbox" style="display:inline-block;margin-bottom:1em">Is Home Team</label>
                <input type="checkbox" id="isHomeCheckbox" v-model="incident.isHome">

                <div class="confirm-discard">
                    <button v-on:click="updateIncident(incident.id)" class="btn-confirm">Save</button>
                    <button disabled class="btn-discard btn-disabled">Discard</button>
                </div>
            </div>
        </template>
    </div>
</div>

@section Scripts {
    <script>
        var app = new Vue({
            el: '#app',
            data: {
                loading: true,
                matchId: @Model.MatchId,
                match: null,
                rel: {
                    types: @Html.Raw(Json.Serialize(Model.IncidentTypes)),
                    classes: @Html.Raw(Json.Serialize(Model.IncidentClasses)),
                },
            },
            mounted() {
                this.getMatch()
            },
            methods: {
                getMatch() {
                    this.loading = true
                    axios.get('/api/matches/' + this.matchId)
                        .then(res => {
                            this.match = res.data
                        })
                        .catch(err => {
                            console.log(err)
                        })
                        .then(() => {
                            this.loading = false
                        })
                },
                updateMatch() {
                    this.loading = true
                    axios.put('/api/matches/' + this.matchId, {
                        id: this.matchId,
                        kickOff: this.match.kickOff,
                        gameWeek: this.match.gameWeek,
                    })
                        .then(res => {
                            console.log(res)
                        })
                        .catch(err => {
                            console.log(err)
                        })
                        .then(() => {
                            this.loading = false
                        });
                },
                discardMatch() {
                    this.getMatch()
                },
                updateIncident(id) {
                    this.loading = true
                    const incidentModel = this.match.incidents.find(i => i.id === id)

                    axios.put('/api/incidents/' + id, {
                        id: id,
                        incident: {
                            homeScore: incidentModel.homeScore,
                            awayScore: incidentModel.awayScore,
                            minute: incidentModel.minute,
                            type: incidentModel.type,
                            class: incidentModel.class,
                            isHome: incidentModel.isHome,
                            matchId: this.matchId,
                            primaryPlayerId: incidentModel.primaryPlayer.id,
                            secondaryPlayerId: incidentModel.secondaryPlayer.id,
                        },
                    })
                        .then(res => {
                            console.log(res)
                        })
                        .catch(err => {
                            console.log(err)
                        })
                        .then(() => {
                            this.loading = false
                        });
                },
            },
            computed: {
            }
        });
    </script>
}
