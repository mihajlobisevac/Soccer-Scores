@page "{id}"
@model SoccerScores.WebUI.Pages.PlayerModel
@{ }

<div id="app">
    <div v-if="player === null">
        Not found
    </div>
    <div v-else>
        <div class="player-container">
            <h4>{{player.firstName}} {{player.lastName}}</h4>
            <img src="/FC_Barcelona.svg" alt="club image" />
        </div>

        <div class="club-info" style="padding-left: 0.1em;margin-bottom: 1.5em;">
            <div class="club-info-table">
                <div class="club-info-e">Nationality</div>
                <div class="club-info-i">{{player.nationality}}</div>
                <div class="club-info-e">City of Birth</div>
                <div class="club-info-i">{{player.placeOfBirth}}</div>
                <div class="club-info-e">Date of Birth</div>
                <div class="club-info-i">{{player.dateOfBirth.substring(0, 10)}}</div>
                <div class="club-info-e">Height</div>
                <div class="club-info-i">{{player.height}}</div>
                <div class="club-info-e">Weight</div>
                <div class="club-info-i">{{player.weight}}</div>
                <div class="club-info-e">Position</div>
                <div class="club-info-i">{{player.position}}</div>
                <div class="club-info-e">Foot</div>
                <div class="club-info-i">{{player.foot}}</div>
            </div>
        </div>

        <h5>Matches</h5>

        foreach (var match in Model.Matches)
        {
            var result = match; /*match.Incidents.FirstOrDefault(x => x.Class == "FT")*/
            bool playingHome = true; /*match.HomeTeam.Id == Model.Player.Club.Id ? true : false*/

            <div class="match-container">
                <a class="match-home-team" asp-page="/Club" asp-route-id="match">
                    HomeTeam
                </a>

                if (result is null)
                {
                    <a class="match-result" asp-page="/Match" asp-route-id="match">
                        match @*.KickOff.ToString("HH:mm")*@
                    </a> 
                }
                else
                {
                    string resultColor = "#F0F0F0";

                    if (playingHome)
                    {
                        //resultColor = result.HomeScore > result.AwayScore ? "var(--clr-win)" : "";
                        //resultColor = result.HomeScore < result.AwayScore ? "var(--clr-loss)" : resultColor;
                        //resultColor = result.HomeScore == result.AwayScore ? "var(--clr-draw)" : resultColor;
                    }
                    else
                    {
                        //resultColor = result.HomeScore > result.AwayScore ? "var(--clr-loss)" : "";
                        //resultColor = result.HomeScore < result.AwayScore ? "var(--clr-win)" : resultColor;
                        //resultColor = result.HomeScore == result.AwayScore ? "var(--clr-draw)" : resultColor;
                    }

                    <a class="match-result" style="background: red"
                    asp-page="/Match" asp-route-id="match">
                        HomeScore:AwayScore
                    </a>
                }
                <a class="match-away-team" asp-page="/Club" asp-route-id="match">
                    AwayTeam
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
<script>
    var app = new Vue({
        el: '#app',
        data: {
            playerId: @Model.PlayerId,
            loading: false,
            playerModel: null,
        },
        mounted() {
            this.getPlayer(this.playerId)
        },
        methods: {
            getPlayer(id) {
                this.loading = true;
                axios.get('/api/players/' + id)
                    .then(res => {
                        this.playerModel = res.data
                    })
                    .catch(err => {
                        console.log(err);
                    })
                    .then(() => {
                        this.loading = false;
                    });
            },
            getMatches(playerId) {
                this.loading = true;
                axios.get('/api/players/' + id)
                    .then(res => {
                        this.playerModel = res.data
                    })
                    .catch(err => {
                        console.log(err);
                    })
                    .then(() => {
                        this.loading = false;
                    });
            },
        },
        computed: {
            player: function () {
                return this.playerModel
            },
        }
    });
</script>
}
